[
    {
        "id": "45c928fdcc827b94",
        "type": "tab",
        "label": "PQA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f1b7d49e6c9117",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "38940f8.c9c27f",
        "type": "group",
        "z": "45c928fdcc827b94",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "70a63b74.44894c",
            "ee01b6d1.f76f98",
            "dc201b4c96bf9cb8",
            "acb738077324d4f5",
            "ead83bdf05616014"
        ],
        "x": -12,
        "y": 13
    },
    {
        "id": "70a63b74.44894c",
        "type": "group",
        "z": "45c928fdcc827b94",
        "g": "38940f8.c9c27f",
        "name": "Configuración CTs",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5c5b638c.a8f91c",
            "cf0d5223.b4dab",
            "7cc997fc.b5d5b8",
            "83dce8ae2adb063d",
            "d22f737e1faaee45"
        ],
        "x": 54,
        "y": 519
    },
    {
        "id": "ee01b6d1.f76f98",
        "type": "group",
        "z": "45c928fdcc827b94",
        "g": "38940f8.c9c27f",
        "name": "Lectura de datos eléctricos PQA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ed025e5c.648858",
            "6188debb.009948",
            "5fe9be31.70c2a",
            "a65e22e6.71c65",
            "993f38ab.482e9",
            "3f9fcc24.6fac3c",
            "d1a9dbc4.33f7e",
            "329a20ae.addd08",
            "f69145ec.595428",
            "7bbced0c.e692d4",
            "8f2ea546.30e13",
            "8d348d63.134818",
            "5ff5e28d.2c7d74",
            "9d6fe8b8.eb7cf8",
            "f8287ebe.9bb3c8",
            "eaf2e52.a8fae18",
            "72ceef76.7f8f1",
            "139d011a.841abf",
            "ddee4aa9.906988",
            "339b7b9a.f4bb14",
            "894eb396.e8f0c",
            "23986012.d8fc9",
            "43ffc14d.a3cac8"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "ae58460d.12c698",
        "type": "modbus-client",
        "name": "PQA",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.2.13",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "5",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "aac0a447c056c621",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "95f233710d77a704",
        "type": "ui_tab",
        "name": "InterfazEventos",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0d982481b4c49ecd",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "95f233710d77a704",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c5b638c.a8f91c",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "cf0d5223.b4dab",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc997fc.b5d5b8",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "70a63b74.44894c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "83dce8ae2adb063d",
        "type": "inject",
        "z": "45c928fdcc827b94",
        "g": "70a63b74.44894c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "5c5b638c.a8f91c"
            ]
        ]
    },
    {
        "id": "d22f737e1faaee45",
        "type": "inject",
        "z": "45c928fdcc827b94",
        "g": "70a63b74.44894c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "cf0d5223.b4dab"
            ]
        ]
    },
    {
        "id": "ed025e5c.648858",
        "type": "modbus-flex-getter",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "a65e22e6.71c65"
            ],
            []
        ]
    },
    {
        "id": "6188debb.009948",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Lectura PQA",
        "func": "var count = context.get(\"Count\")||0;\n\n// Real Time Parameters\nif(count === 0){\n    msg.topic = \"Real Time Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16384, \n                    'quantity': 39*2 \n    }\n    count ++;\n}\n\n// Energy Parameters\nelse if (count == 1){\n    msg.topic = \"Energy Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16456, \n                    'quantity': 24*2 \n    }\n    count ++;\n}\n\n// Harmonics - Power Quality\nelse if (count == 2){\n    msg.topic = \"Power Quality\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16474, \n                    'quantity': 8 \n    }\n    count ++;\n}\n\n// Phase Angles\nelse if (count == 3){\n    msg.topic = \"Phase Angles\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 17056, \n                    'quantity': 5 \n    }\n    count ++;\n}\nelse if (count == 4){\n    msg.topic = \"Harmonics_V1(V12)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16482, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 5){\n    msg.topic = \"Harmonics_V2(V31)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16516, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 6){\n    msg.topic = \"Harmonics_V3(V23)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16550, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 7){\n    msg.topic = \"Harmonics_I1\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16584, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 8){\n    msg.topic = \"Harmonics_I2\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16617, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 9){\n    msg.topic = \"Harmonics_I3\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16650, \n                    'quantity': 12 \n    }\n    count ++;\n}\n\n// Error\nelse {\n    msg.topic = msg.payload;\n    msg.payload = \"Function Error!\";\n}\n\n// Count Reset\nif(count > 9){count = 0;}\n\n// Context update\ncontext.set(\"Count\",count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "ed025e5c.648858"
            ]
        ]
    },
    {
        "id": "5fe9be31.70c2a",
        "type": "inject",
        "z": "45c928fdcc827b94",
        "d": true,
        "g": "ee01b6d1.f76f98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "6188debb.009948"
            ]
        ]
    },
    {
        "id": "a65e22e6.71c65",
        "type": "switch",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Real Time Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Energy Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Power Quality",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Phase Angles",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V1(V12)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V2(V31)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V3(V23)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 590,
        "y": 260,
        "wires": [
            [],
            [
                "d1a9dbc4.33f7e"
            ],
            [
                "993f38ab.482e9"
            ],
            [
                "3f9fcc24.6fac3c"
            ],
            [
                "8d348d63.134818"
            ],
            [
                "339b7b9a.f4bb14"
            ],
            [
                "9d6fe8b8.eb7cf8"
            ],
            [
                "72ceef76.7f8f1"
            ],
            [
                "139d011a.841abf"
            ],
            [
                "ddee4aa9.906988"
            ]
        ]
    },
    {
        "id": "993f38ab.482e9",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - Power Quality",
        "func": "msg.payload = {\n    \"THD_V1(V12)\"   : msg.payload[0]/100,\n    \"THD_V2(V31)\"   : msg.payload[1]/100,\n    \"THD_V3(V23)\"   : msg.payload[2]/100,\n    \"THD_avg\"       : msg.payload[3]/100,\n    \"THD_I1\"        : msg.payload[4]/100,\n    \"THD_I2\"        : msg.payload[5]/100,\n    \"THD_I3\"        : msg.payload[6]/100,\n    \"THD_Iavg\"      : msg.payload[7]/100\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "7bbced0c.e692d4"
            ]
        ]
    },
    {
        "id": "3f9fcc24.6fac3c",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Phase Angles",
        "func": "msg.payload = {\n    \"Phase_Angle_of_V2_to_V1\"   : msg.payload[0]/10,\n    \"Phase_Angle_of_V3_to_V1\"   : msg.payload[1]/10,\n    \"Phase_Angle_of_I1_to_V1\"   : msg.payload[2]/10,\n    \"Phase_Angle_of_I2_to_V1\"   : msg.payload[3]/10,\n    \"Phase_Angle_of_I3_to_V1\"   : msg.payload[4]/10\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 200,
        "wires": [
            [
                "8f2ea546.30e13"
            ]
        ]
    },
    {
        "id": "d1a9dbc4.33f7e",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Energy Parameters IEC754 to Float ",
        "func": "/* Converts from an number, string, buffer or array representing an IEEE-754 value\n * to a javascript float.\n * The following may be given in msg.payload:\n *      A string representing a number, which may be hex or binary\n *        examples, \"1735\"  \"0x02045789\"  0b01000000010010010000111111011011\n *      An integer value\n *      A four element array or buffer of 8 bit values, most significant byte first.\n*/ \n// first make a number from the given payload if necessary\n\n\n// Convert 2 registers of 16 bits in one of 32 bits\nvar Consumed_Energy\t            = ((msg.payload[0] << 16) + msg.payload[1]); Consumed_Energy            = Int2Float32(Consumed_Energy);\nvar Generated_Energy\t\t    = ((msg.payload[2] << 16) + msg.payload[3]); Generated_Energy           = Int2Float32(Generated_Energy);\nvar Consumed_Reactive_Energy    = ((msg.payload[4] << 16) + msg.payload[5]); Consumed_Reactive_Energy   = Int2Float32(Consumed_Reactive_Energy);\nvar Generated_Reactive_Energy   = ((msg.payload[6] << 16) + msg.payload[7]); Generated_Reactive_Energy  = Int2Float32(Generated_Reactive_Energy);\nvar Total_Energy\t\t        = ((msg.payload[8] << 16) + msg.payload[9]); Total_Energy               = Int2Float32(Total_Energy);\n\n// Output Message\nmsg.payload = {\n    \"Consumed_Energy\"           : Consumed_Energy,\n    \"Generated_Energy\"          : Generated_Energy,\n    \"Consumed_Reactive_Energy\"  : Consumed_Reactive_Energy,\n    \"Generated_Reactive_Energy\" : Generated_Energy,\n    \"Total_Energy\"              : Total_Energy\n}\n\nreturn msg;\n\n// IEC 754 to Float Function\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\n// Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 120,
        "wires": [
            [
                "f69145ec.595428"
            ]
        ]
    },
    {
        "id": "329a20ae.addd08",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Real_Time_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f69145ec.595428",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Energy_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7bbced0c.e692d4",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.Power_Quality",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "8f2ea546.30e13",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Phase_Angles",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8d348d63.134818",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics - V1(V12)",
        "func": "msg.payload = {\n    \"THD_V1(V12)_3o\"    : msg.payload[1]/100,\n    \"THD_V1(V12)_5o\"    : msg.payload[3]/100,\n    \"THD_V1(V12)_7o\"    : msg.payload[5]/100,\n    \"THD_V1(V12)_9o\"    : msg.payload[7]/100,\n    \"THD_V1(V12)_11o\"   : msg.payload[9]/100,\n    \"THD_V1(V12)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 240,
        "wires": [
            [
                "5ff5e28d.2c7d74"
            ]
        ]
    },
    {
        "id": "5ff5e28d.2c7d74",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V1_V12",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9d6fe8b8.eb7cf8",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V3(V23)",
        "func": "msg.payload = {\n    \"THD_V3(V23)_3o\"    : msg.payload[1]/100,\n    \"THD_V3(V23)_5o\"    : msg.payload[3]/100,\n    \"THD_V3(V23)_7o\"    : msg.payload[5]/100,\n    \"THD_V3(V23)_9o\"    : msg.payload[7]/100,\n    \"THD_V3(V23)_11o\"   : msg.payload[9]/100,\n    \"THD_V3(V23)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 320,
        "wires": [
            [
                "f8287ebe.9bb3c8"
            ]
        ]
    },
    {
        "id": "f8287ebe.9bb3c8",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V3_V23",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "eaf2e52.a8fae18",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V2_V31",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "72ceef76.7f8f1",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I1",
        "func": "msg.payload = {\n    \"THD_I1_3o\"    : msg.payload[1]/100,\n    \"THD_I1_5o\"    : msg.payload[3]/100,\n    \"THD_I1_7o\"    : msg.payload[5]/100,\n    \"THD_I1_9o\"    : msg.payload[7]/100,\n    \"THD_I1_11o\"   : msg.payload[9]/100,\n    \"THD_I1_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 360,
        "wires": [
            [
                "43ffc14d.a3cac8"
            ]
        ]
    },
    {
        "id": "139d011a.841abf",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I2",
        "func": "msg.payload = {\n    \"THD_I2_3o\"    : msg.payload[1]/100,\n    \"THD_I2_5o\"    : msg.payload[3]/100,\n    \"THD_I2_7o\"    : msg.payload[5]/100,\n    \"THD_I2_9o\"    : msg.payload[7]/100,\n    \"THD_I2_11o\"   : msg.payload[9]/100,\n    \"THD_I2_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 400,
        "wires": [
            [
                "23986012.d8fc9"
            ]
        ]
    },
    {
        "id": "ddee4aa9.906988",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_I3",
        "func": "msg.payload = {\n    \"THD_I3_3o\"    : msg.payload[1]/100,\n    \"THD_I3_5o\"    : msg.payload[3]/100,\n    \"THD_I3_7o\"    : msg.payload[5]/100,\n    \"THD_I3_9o\"    : msg.payload[7]/100,\n    \"THD_I3_11o\"   : msg.payload[9]/100,\n    \"THD_I3_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 440,
        "wires": [
            [
                "894eb396.e8f0c"
            ]
        ]
    },
    {
        "id": "339b7b9a.f4bb14",
        "type": "function",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "Harmonics_V2(V31)",
        "func": "msg.payload = {\n    \"THD_V2(V31)_3o\"    : msg.payload[1]/100,\n    \"THD_V2(V31)_5o\"    : msg.payload[3]/100,\n    \"THD_V2(V31)_7o\"    : msg.payload[5]/100,\n    \"THD_V2(V31)_9o\"    : msg.payload[7]/100,\n    \"THD_V2(V31)_11o\"   : msg.payload[9]/100,\n    \"THD_V2(V31)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 280,
        "wires": [
            [
                "eaf2e52.a8fae18"
            ]
        ]
    },
    {
        "id": "894eb396.e8f0c",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "23986012.d8fc9",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "43ffc14d.a3cac8",
        "type": "change",
        "z": "45c928fdcc827b94",
        "g": "ee01b6d1.f76f98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "dc201b4c96bf9cb8",
        "type": "comment",
        "z": "45c928fdcc827b94",
        "g": "38940f8.c9c27f",
        "name": "Si Cambia dirección IP PQA escribirla aquí",
        "info": "",
        "x": 650,
        "y": 550,
        "wires": []
    },
    {
        "id": "acb738077324d4f5",
        "type": "link out",
        "z": "45c928fdcc827b94",
        "g": "38940f8.c9c27f",
        "name": "",
        "links": [
            "756bcd33a6cec802"
        ],
        "x": 655,
        "y": 590,
        "wires": []
    },
    {
        "id": "ead83bdf05616014",
        "type": "inject",
        "z": "45c928fdcc827b94",
        "g": "38940f8.c9c27f",
        "name": "IP pqa",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "192.168.2.93",
        "payloadType": "str",
        "x": 560,
        "y": 590,
        "wires": [
            [
                "acb738077324d4f5"
            ]
        ]
    },
    {
        "id": "57288bdf6db2ed52",
        "type": "modbus-flex-getter",
        "z": "90f1b7d49e6c9117",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "39272266cd26c05c"
            ],
            []
        ]
    },
    {
        "id": "e3ab81d39a45df61",
        "type": "function",
        "z": "90f1b7d49e6c9117",
        "name": "Lectura PQA",
        "func": "//Lee desde la direcion 8CFDH hasta la 8D07H\n//Tres parametros y Ocho datos del evento\n    msg.topic = \"LecturaPQA\";\n    flow.set(\"LecturaPQA\",msg.topic,\"memoryOnly\");\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 36093, \n                    'quantity': 11\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 280,
        "wires": [
            [
                "57288bdf6db2ed52"
            ]
        ]
    },
    {
        "id": "cfb08aad22c0de19",
        "type": "inject",
        "z": "90f1b7d49e6c9117",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "e3ab81d39a45df61"
            ]
        ]
    },
    {
        "id": "39272266cd26c05c",
        "type": "function",
        "z": "90f1b7d49e6c9117",
        "name": "EventosPQA",
        "func": "var Lectura = flow.get(\"LecturaPQA\", \"memoryOnly\") || 0;\ncontext.set(\"Lectura\", Lectura, \"memoryOnly\");\n\nif (Lectura == \"LecturaPQA\") {\n//Adquisicion de los datos de un evento\nvar Uint8 = new Uint8Array(6);\nvar NewestEvent = msg.payload[0];\nvar StartingGroup = msg.payload[1];\nvar Timestamp1 = msg.payload[3];\nvar Timestamp2 = msg.payload[4];\nvar Timestamp3 = msg.payload[5];\nvar Timestamp4 = msg.payload[6];\nvar VSagVSwell = msg.payload[7];\nvar RatedValue = msg.payload[8];\nvar Threshold = msg.payload[9];\nvar HalfCycle = msg.payload[10];\n//Corrimiento de datos\nUint8[0] = Timestamp1;\nUint8[1] = Timestamp1 >> 8;\nUint8[2] = Timestamp2;\nUint8[3] = Timestamp2 >> 8;\nUint8[4] = Timestamp3;\nUint8[5] = Timestamp3 >> 8;\nvar year = Uint8[1] + 2000;\n\n//Guardar los eventos que llegan \n    var EventosPQA = flow.get(\"eventosPQA\") || []; //Arreglo para guardar los eventos\n    var flag;\n\n    for (let j = 1; j >= EventosPQA.length; j++) {\n        if (StartingGroup == EventosPQA[j]) {\n            flag = 0;\n            break;\n        } else {\n            flag = 1;\n        }\n    }\n    if (flag == 1) {\n        flow.set(\"EventosPQA\", EventosPQA, \"memoryOnly\"); //Guardar el evennto en el array de eventos \n    }\n\n\nvar dataEvento = [{ //Data del evento consultado \n    \"NewestEvent\": NewestEvent,\n    \"StartingGroup\": StartingGroup,\n    \"Fecha\": year + \"/\" + Uint8[0] + \"/\" + Uint8[3],\n    \"Hora\": Uint8[2] + \":\" + Uint8[5] + \":\" + Uint8[4],\n    \"Milisegundos\": Timestamp4,\n    \"VSagVSwell\": VSagVSwell,\n    \"RatedValue\": RatedValue,\n    \"Threshold\": Threshold,\n    \"HalfCycle\": HalfCycle\n}];\nflow.set(\"NewestEvent\", NewestEvent, \"memoryOnly\"); //Guarda el numero del ultimo evento \n\nreturn msg;\n\n}else {\n    node.status({ fill: \"red\", shape: \"ring\", text: \"No tiene nada\" });\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 260,
        "wires": [
            [
                "1a9a71ad4aa1ddaa"
            ]
        ]
    },
    {
        "id": "681dc7052894e8de",
        "type": "inject",
        "z": "90f1b7d49e6c9117",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "dcda03d7160772b4"
            ]
        ]
    },
    {
        "id": "dcda03d7160772b4",
        "type": "function",
        "z": "90f1b7d49e6c9117",
        "name": "EscrituraPQA",
        "func": "var ultimoEvento = flow.get(\"NewestEvent\", \"memoryOnly\")||0; //Guarda el número del ultimo evento  \ncontext.set(\"ultimoEvento\",ultimoEvento, \"memoryOnly\");\nvar ctr = context.get(\"ctr\",\"memoryOnly\")||0;\n\n//Contador de eventos \nif (ctr < ultimoEvento) {\n    ctr = ctr + 1;\n} else {\n    ctr = 1;\n}\ncontext.set(\"ctr\", ctr, \"memoryOnly\"); \n\n//Lee la dirección del StartingGroup (8CFEH)\nmsg.payload = {\n    value: [ctr],\n    'fc': 16,\n    'unitid': 5,\n    'address': 36094,\n    'quantity': 1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 380,
        "wires": [
            [
                "7fd28618af72ab3a"
            ]
        ]
    },
    {
        "id": "7fd28618af72ab3a",
        "type": "modbus-flex-write",
        "z": "90f1b7d49e6c9117",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "ae58460d.12c698",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 510,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1a9a71ad4aa1ddaa",
        "type": "ui_table",
        "z": "90f1b7d49e6c9117",
        "group": "0d982481b4c49ecd",
        "name": "",
        "order": 1,
        "width": 13,
        "height": 5,
        "columns": [
            {
                "field": "NewestEvent",
                "title": "No.",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "StartingGroup",
                "title": "StartingGroup",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Fecha",
                "title": "Fecha",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hora",
                "title": "Hora",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Milisegundos",
                "title": "Milisegundos",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "VSagVSwell",
                "title": "VSagVSwell",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "RatedValue",
                "title": "RatedValue",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Threshold",
                "title": "Threshold",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "HalfCycle",
                "title": "HalfCycle",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 770,
        "y": 260,
        "wires": []
    }
]