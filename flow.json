[
    {
        "id": "00a94a92b4a92fe9",
        "type": "tab",
        "label": "PQA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "323bc1f107eef839",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "873d7ea09f5f8d2d",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "38b15402e5bf2d35",
        "type": "group",
        "z": "00a94a92b4a92fe9",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "abc2c8bc8582576b",
            "85bfb7d199102d68",
            "3f563ec18cbf031f",
            "9633e7bbe79878eb",
            "5ed1dc50b230c5fe"
        ],
        "x": -12,
        "y": 13
    },
    {
        "id": "abc2c8bc8582576b",
        "type": "group",
        "z": "00a94a92b4a92fe9",
        "g": "38b15402e5bf2d35",
        "name": "Configuración CTs",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1e10dc753c78a617",
            "75df2bcd108a3664",
            "0fd3535cb13e373f",
            "04dd66bafeac3f59",
            "301535050dd7067c"
        ],
        "x": 54,
        "y": 519
    },
    {
        "id": "85bfb7d199102d68",
        "type": "group",
        "z": "00a94a92b4a92fe9",
        "g": "38b15402e5bf2d35",
        "name": "Lectura de datos eléctricos PQA",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "996b540aa9d2424e",
            "cdd4a90d86bd3f3c",
            "34c866df5cf67e31",
            "bdcd027597f8f678",
            "61d364f60ac7cfd7",
            "9e3272f43311110b",
            "67414b65758ec298",
            "6470cabde7abf453",
            "8eb4884a4c6e13f8",
            "4895e08c8a69d1db",
            "69f76eb4eeecc615",
            "e6fcb6dbe65642e7",
            "d7e6dd8f9cc51484",
            "fd44492123a58c15",
            "18b4a88e2b654a88",
            "65958f3368d58c3d",
            "33a5bbf5bc8ca6a6",
            "a683389291a3b5f6",
            "670f3a8a7ca251b2",
            "b32133b937bca905",
            "efc7cfd0766ffc47",
            "8602298c75fd8441",
            "5dcfb06cbde574fe"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "ae58460d.12c698",
        "type": "modbus-client",
        "name": "PQA",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.2.13",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "5",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "aac0a447c056c621",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "95f233710d77a704",
        "type": "ui_tab",
        "name": "InterfazEventos",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0d982481b4c49ecd",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "95f233710d77a704",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false
    },
    {
        "id": "94e450d3bce1686e",
        "type": "ui_group",
        "name": "Trends",
        "tab": "f946bef3fe503852",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f946bef3fe503852",
        "type": "ui_tab",
        "name": "Trends",
        "icon": "fa-area-chart",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e10dc753c78a617",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "abc2c8bc8582576b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "75df2bcd108a3664",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "abc2c8bc8582576b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS.CT2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0fd3535cb13e373f",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "abc2c8bc8582576b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PQA.CTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "04dd66bafeac3f59",
        "type": "inject",
        "z": "00a94a92b4a92fe9",
        "g": "abc2c8bc8582576b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "1e10dc753c78a617"
            ]
        ]
    },
    {
        "id": "301535050dd7067c",
        "type": "inject",
        "z": "00a94a92b4a92fe9",
        "g": "abc2c8bc8582576b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "75df2bcd108a3664"
            ]
        ]
    },
    {
        "id": "996b540aa9d2424e",
        "type": "modbus-flex-getter",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "bdcd027597f8f678"
            ],
            []
        ]
    },
    {
        "id": "cdd4a90d86bd3f3c",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Lectura PQA",
        "func": "var count = context.get(\"Count\")||0;\n\n// Real Time Parameters\nif(count === 0){\n    msg.topic = \"Real Time Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16384, \n                    'quantity': 39*2 \n    }\n    count ++;\n}\n\n// Energy Parameters\nelse if (count == 1){\n    msg.topic = \"Energy Parameters\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16456, \n                    'quantity': 24*2 \n    }\n    count ++;\n}\n\n// Harmonics - Power Quality\nelse if (count == 2){\n    msg.topic = \"Power Quality\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16474, \n                    'quantity': 8 \n    }\n    count ++;\n}\n\n// Phase Angles\nelse if (count == 3){\n    msg.topic = \"Phase Angles\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 17056, \n                    'quantity': 5 \n    }\n    count ++;\n}\nelse if (count == 4){\n    msg.topic = \"Harmonics_V1(V12)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16482, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 5){\n    msg.topic = \"Harmonics_V2(V31)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16516, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 6){\n    msg.topic = \"Harmonics_V3(V23)\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16550, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 7){\n    msg.topic = \"Harmonics_I1\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16584, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 8){\n    msg.topic = \"Harmonics_I2\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16617, \n                    'quantity': 12 \n    }\n    count ++;\n}\nelse if (count == 9){\n    msg.topic = \"Harmonics_I3\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 16650, \n                    'quantity': 12 \n    }\n    count ++;\n}\n\n// Error\nelse {\n    msg.topic = msg.payload;\n    msg.payload = \"Function Error!\";\n}\n\n// Count Reset\nif(count > 9){count = 0;}\n\n// Context update\ncontext.set(\"Count\",count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "996b540aa9d2424e"
            ]
        ]
    },
    {
        "id": "34c866df5cf67e31",
        "type": "inject",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "cdd4a90d86bd3f3c"
            ]
        ]
    },
    {
        "id": "bdcd027597f8f678",
        "type": "switch",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Real Time Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Energy Parameters",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Power Quality",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Phase Angles",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V1(V12)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V2(V31)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_V3(V23)",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Harmonics_I3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 590,
        "y": 260,
        "wires": [
            [],
            [
                "67414b65758ec298"
            ],
            [
                "61d364f60ac7cfd7"
            ],
            [
                "9e3272f43311110b"
            ],
            [
                "e6fcb6dbe65642e7"
            ],
            [
                "b32133b937bca905"
            ],
            [
                "fd44492123a58c15"
            ],
            [
                "33a5bbf5bc8ca6a6"
            ],
            [
                "a683389291a3b5f6"
            ],
            [
                "670f3a8a7ca251b2"
            ]
        ]
    },
    {
        "id": "61d364f60ac7cfd7",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics - Power Quality",
        "func": "msg.payload = {\n    \"THD_V1(V12)\"   : msg.payload[0]/100,\n    \"THD_V2(V31)\"   : msg.payload[1]/100,\n    \"THD_V3(V23)\"   : msg.payload[2]/100,\n    \"THD_avg\"       : msg.payload[3]/100,\n    \"THD_I1\"        : msg.payload[4]/100,\n    \"THD_I2\"        : msg.payload[5]/100,\n    \"THD_I3\"        : msg.payload[6]/100,\n    \"THD_Iavg\"      : msg.payload[7]/100\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "4895e08c8a69d1db"
            ]
        ]
    },
    {
        "id": "9e3272f43311110b",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Phase Angles",
        "func": "msg.payload = {\n    \"Phase_Angle_of_V2_to_V1\"   : msg.payload[0]/10,\n    \"Phase_Angle_of_V3_to_V1\"   : msg.payload[1]/10,\n    \"Phase_Angle_of_I1_to_V1\"   : msg.payload[2]/10,\n    \"Phase_Angle_of_I2_to_V1\"   : msg.payload[3]/10,\n    \"Phase_Angle_of_I3_to_V1\"   : msg.payload[4]/10\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 200,
        "wires": [
            [
                "69f76eb4eeecc615"
            ]
        ]
    },
    {
        "id": "67414b65758ec298",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Energy Parameters IEC754 to Float ",
        "func": "/* Converts from an number, string, buffer or array representing an IEEE-754 value\n * to a javascript float.\n * The following may be given in msg.payload:\n *      A string representing a number, which may be hex or binary\n *        examples, \"1735\"  \"0x02045789\"  0b01000000010010010000111111011011\n *      An integer value\n *      A four element array or buffer of 8 bit values, most significant byte first.\n*/ \n// first make a number from the given payload if necessary\n\n\n// Convert 2 registers of 16 bits in one of 32 bits\nvar Consumed_Energy\t            = ((msg.payload[0] << 16) + msg.payload[1]); Consumed_Energy            = Int2Float32(Consumed_Energy);\nvar Generated_Energy\t\t    = ((msg.payload[2] << 16) + msg.payload[3]); Generated_Energy           = Int2Float32(Generated_Energy);\nvar Consumed_Reactive_Energy    = ((msg.payload[4] << 16) + msg.payload[5]); Consumed_Reactive_Energy   = Int2Float32(Consumed_Reactive_Energy);\nvar Generated_Reactive_Energy   = ((msg.payload[6] << 16) + msg.payload[7]); Generated_Reactive_Energy  = Int2Float32(Generated_Reactive_Energy);\nvar Total_Energy\t\t        = ((msg.payload[8] << 16) + msg.payload[9]); Total_Energy               = Int2Float32(Total_Energy);\n\n// Output Message\nmsg.payload = {\n    \"Consumed_Energy\"           : Consumed_Energy,\n    \"Generated_Energy\"          : Generated_Energy,\n    \"Consumed_Reactive_Energy\"  : Consumed_Reactive_Energy,\n    \"Generated_Reactive_Energy\" : Generated_Energy,\n    \"Total_Energy\"              : Total_Energy\n}\n\nreturn msg;\n\n// IEC 754 to Float Function\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}\n\n// Créditos: https://flows.nodered.org/flow/359ead34237b7ab6ec0465ee85a34b62",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 120,
        "wires": [
            [
                "8eb4884a4c6e13f8"
            ]
        ]
    },
    {
        "id": "6470cabde7abf453",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Real_Time_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8eb4884a4c6e13f8",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Energy_Parameters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4895e08c8a69d1db",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.Power_Quality",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "69f76eb4eeecc615",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Phase_Angles",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e6fcb6dbe65642e7",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics - V1(V12)",
        "func": "msg.payload = {\n    \"THD_V1(V12)_3o\"    : msg.payload[1]/100,\n    \"THD_V1(V12)_5o\"    : msg.payload[3]/100,\n    \"THD_V1(V12)_7o\"    : msg.payload[5]/100,\n    \"THD_V1(V12)_9o\"    : msg.payload[7]/100,\n    \"THD_V1(V12)_11o\"   : msg.payload[9]/100,\n    \"THD_V1(V12)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 240,
        "wires": [
            [
                "d7e6dd8f9cc51484"
            ]
        ]
    },
    {
        "id": "d7e6dd8f9cc51484",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V1_V12",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fd44492123a58c15",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics_V3(V23)",
        "func": "msg.payload = {\n    \"THD_V3(V23)_3o\"    : msg.payload[1]/100,\n    \"THD_V3(V23)_5o\"    : msg.payload[3]/100,\n    \"THD_V3(V23)_7o\"    : msg.payload[5]/100,\n    \"THD_V3(V23)_9o\"    : msg.payload[7]/100,\n    \"THD_V3(V23)_11o\"   : msg.payload[9]/100,\n    \"THD_V3(V23)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 320,
        "wires": [
            [
                "18b4a88e2b654a88"
            ]
        ]
    },
    {
        "id": "18b4a88e2b654a88",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V3_V23",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "65958f3368d58c3d",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.V2_V31",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "33a5bbf5bc8ca6a6",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics_I1",
        "func": "msg.payload = {\n    \"THD_I1_3o\"    : msg.payload[1]/100,\n    \"THD_I1_5o\"    : msg.payload[3]/100,\n    \"THD_I1_7o\"    : msg.payload[5]/100,\n    \"THD_I1_9o\"    : msg.payload[7]/100,\n    \"THD_I1_11o\"   : msg.payload[9]/100,\n    \"THD_I1_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 360,
        "wires": [
            [
                "5dcfb06cbde574fe"
            ]
        ]
    },
    {
        "id": "a683389291a3b5f6",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics_I2",
        "func": "msg.payload = {\n    \"THD_I2_3o\"    : msg.payload[1]/100,\n    \"THD_I2_5o\"    : msg.payload[3]/100,\n    \"THD_I2_7o\"    : msg.payload[5]/100,\n    \"THD_I2_9o\"    : msg.payload[7]/100,\n    \"THD_I2_11o\"   : msg.payload[9]/100,\n    \"THD_I2_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 400,
        "wires": [
            [
                "8602298c75fd8441"
            ]
        ]
    },
    {
        "id": "670f3a8a7ca251b2",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics_I3",
        "func": "msg.payload = {\n    \"THD_I3_3o\"    : msg.payload[1]/100,\n    \"THD_I3_5o\"    : msg.payload[3]/100,\n    \"THD_I3_7o\"    : msg.payload[5]/100,\n    \"THD_I3_9o\"    : msg.payload[7]/100,\n    \"THD_I3_11o\"   : msg.payload[9]/100,\n    \"THD_I3_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 440,
        "wires": [
            [
                "efc7cfd0766ffc47"
            ]
        ]
    },
    {
        "id": "b32133b937bca905",
        "type": "function",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "Harmonics_V2(V31)",
        "func": "msg.payload = {\n    \"THD_V2(V31)_3o\"    : msg.payload[1]/100,\n    \"THD_V2(V31)_5o\"    : msg.payload[3]/100,\n    \"THD_V2(V31)_7o\"    : msg.payload[5]/100,\n    \"THD_V2(V31)_9o\"    : msg.payload[7]/100,\n    \"THD_V2(V31)_11o\"   : msg.payload[9]/100,\n    \"THD_V2(V31)_13o\"   : msg.payload[11]/100,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 280,
        "wires": [
            [
                "65958f3368d58c3d"
            ]
        ]
    },
    {
        "id": "efc7cfd0766ffc47",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8602298c75fd8441",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5dcfb06cbde574fe",
        "type": "change",
        "z": "00a94a92b4a92fe9",
        "g": "85bfb7d199102d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::PQA.Harmonics.I1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3f563ec18cbf031f",
        "type": "comment",
        "z": "00a94a92b4a92fe9",
        "g": "38b15402e5bf2d35",
        "name": "Si Cambia dirección IP PQA escribirla aquí",
        "info": "",
        "x": 650,
        "y": 550,
        "wires": []
    },
    {
        "id": "9633e7bbe79878eb",
        "type": "link out",
        "z": "00a94a92b4a92fe9",
        "g": "38b15402e5bf2d35",
        "name": "",
        "links": [
            "756bcd33a6cec802"
        ],
        "x": 655,
        "y": 590,
        "wires": []
    },
    {
        "id": "5ed1dc50b230c5fe",
        "type": "inject",
        "z": "00a94a92b4a92fe9",
        "g": "38b15402e5bf2d35",
        "name": "IP pqa",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "192.168.2.93",
        "payloadType": "str",
        "x": 560,
        "y": 590,
        "wires": [
            [
                "9633e7bbe79878eb"
            ]
        ]
    },
    {
        "id": "dda960f8729cd6eb",
        "type": "modbus-flex-getter",
        "z": "323bc1f107eef839",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "ae58460d.12c698",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "293a6024e9c87686"
            ],
            []
        ]
    },
    {
        "id": "574de16ddb496b3a",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "Lectura PQA",
        "func": "//Lee desde la direcion 8CFDH hasta la 8D07H\n//Tres parametros y Ocho datos del evento\nmsg.topic = \"LecturaPQA\";\n    msg.payload = { 'fc': 3, \n                    'unitid': 5, \n                    'address': 36093, \n                    'quantity': 11\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 280,
        "wires": [
            [
                "dda960f8729cd6eb"
            ]
        ]
    },
    {
        "id": "8810a33b12cc66b8",
        "type": "inject",
        "z": "323bc1f107eef839",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "574de16ddb496b3a"
            ]
        ]
    },
    {
        "id": "19336663eb434a01",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "EventosPQA",
        "func": "//Adquisicion de los datos de un evento\nvar Uint8 = new Uint8Array(6);\nvar NewestEvent = msg.payload[0];\nvar StartingGroup = msg.payload[1];\nvar Timestamp1 = msg.payload[3];\nvar Timestamp2 = msg.payload[4];\nvar Timestamp3 = msg.payload[5];\nvar Timestamp4 = msg.payload[6];\nvar VSagVSwell = msg.payload[7];\nvar RatedValue = msg.payload[8];\nvar Threshold = msg.payload[9];\nvar HalfCycle = msg.payload[10];\n//Corrimiento de datos\nUint8[0] = Timestamp1;\nUint8[1] = Timestamp1 >> 8;\nUint8[2] = Timestamp2;\nUint8[3] = Timestamp2 >> 8;\nUint8[4] = Timestamp3;\nUint8[5] = Timestamp3 >> 8;\nvar year = Uint8[1] + 2000;\n\n//Data del evento consultado - estructura\nvar dataEvento = { \n    \"NewestEvent\": NewestEvent,\n    \"StartingGroup\": StartingGroup,\n    \"Fecha\": year + \"/\" + Uint8[0] + \"/\" + Uint8[3],\n    \"Hora\": Uint8[2] + \":\" + Uint8[5] + \":\" + Uint8[4],\n    \"Milisegundos\": Timestamp4,\n    \"VSagVSwell\": VSagVSwell,\n    \"RatedValue\": RatedValue,\n    \"Threshold\": Threshold,\n    \"HalfCycle\": HalfCycle\n};\ncontext.set(\"dataEvento\",dataEvento,\"memoryOnly\");\n\n//Consultar los eventos \nvar Escritura = flow.get(\"Escritura\", \"memoryOnly\") || 0;\nvar m = context.get(\"m\", \"memoryOnly\") || 0;\ncontext.set(\"NewestEvent\", NewestEvent,\"memoryOnly\");\ncontext.set(\"Escritura\", Escritura,\"memoryOnly\");\nvar EventoGuardado = flow.get(\"EventoGuardado\", \"memoryOnly\") || [];\n\nif (Escritura != NewestEvent && Escritura != 1){  \n    m = m + 1;\n    Escritura = NewestEvent - m;\n    if (m > 0 && m <= 10){\n        // guardar el evento seleccionado\n       EventoGuardado.push(dataEvento);\n    } //flow.set(\"EventoGuardado\", EventoGuardado, \"memoryOnly\");\n} else {\n    m = 0;\n    Escritura = NewestEvent + 1;\n}\ncontext.set(\"m\",m,\"memoryOnly\");\nflow.set(\"EventoGuardado\", EventoGuardado, \"memoryOnly\");\n\nflow.set(\"Escritura\", Escritura, \"memoryOnly\"); //Guarda el numero del evento a consultar \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "context.set(\"m\", 0, \"memoryOnly\");\n// Code added here will be run once\n// whenever the node is started.\n",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3d9fde251a4618e2",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "EscrituraPQA",
        "func": "var escribirEvento = flow.get(\"Escritura\", \"memoryOnly\")||0; //Guarda el número del evento más reciente\ncontext.set(\"escribirEvento\", escribirEvento, \"memoryOnly\");\n\n//Lee la dirección del StartingGroup (8CFEH)\n msg.payload = {\n     value: [escribirEvento],\n     'fc': 16,\n     'unitid': 5,\n     'address': 36094,\n     'quantity': 1\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 380,
        "wires": [
            [
                "90c8b88f4408b2ad"
            ]
        ]
    },
    {
        "id": "90c8b88f4408b2ad",
        "type": "modbus-flex-write",
        "z": "323bc1f107eef839",
        "name": "PQA Modbus TCP",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "ae58460d.12c698",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 510,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d43c5a09ed2a8750",
        "type": "inject",
        "z": "323bc1f107eef839",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "3d9fde251a4618e2"
            ]
        ]
    },
    {
        "id": "293a6024e9c87686",
        "type": "switch",
        "z": "323bc1f107eef839",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LecturaPQA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 240,
        "wires": [
            [
                "19336663eb434a01"
            ]
        ]
    },
    {
        "id": "6976fddb52483491",
        "type": "function",
        "z": "873d7ea09f5f8d2d",
        "name": "",
        "func": "var eventos = context.get(\"eventos\",\"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "var eventos = [{ \"NewestEvent\": 307, \"StartingGroup\": 4, \"Fecha\": \"2019/12/12\", \"Hora\": \"17:52:29\", \"Milisegundos\": 564, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 4, \"Fecha\": \"2019/12/12\", \"Hora\": \"17:52:29\", \"Milisegundos\": 564, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 4, \"Fecha\": \"2019/12/12\", \"Hora\": \"17:52:29\", \"Milisegundos\": 564, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 4, \"Fecha\": \"2019/12/12\", \"Hora\": \"17:52:29\", \"Milisegundos\": 564, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 4, \"Fecha\": \"2019/12/12\", \"Hora\": \"17:52:29\", \"Milisegundos\": 564, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 303, \"Fecha\": \"2021/12/9\", \"Hora\": \"15:53:35\", \"Milisegundos\": 608, \"VSagVSwell\": 4, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 303, \"Fecha\": \"2021/12/9\", \"Hora\": \"15:53:35\", \"Milisegundos\": 608, \"VSagVSwell\": 4, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 303, \"Fecha\": \"2021/12/9\", \"Hora\": \"15:53:35\", \"Milisegundos\": 608, \"VSagVSwell\": 4, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 303, \"Fecha\": \"2021/12/9\", \"Hora\": \"15:53:35\", \"Milisegundos\": 608, \"VSagVSwell\": 4, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }, { \"NewestEvent\": 307, \"StartingGroup\": 299, \"Fecha\": \"2021/12/9\", \"Hora\": \"14:52:26\", \"Milisegundos\": 247, \"VSagVSwell\": 1, \"RatedValue\": 270, \"Threshold\": 80, \"HalfCycle\": 10 }]\ncontext.set(\"eventos\",eventos,\"memoryOnly\");\n// Code added here will be run once\n// whenever the node is started.\n",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c66aa01b7c369cbb",
        "type": "inject",
        "z": "873d7ea09f5f8d2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "6976fddb52483491"
            ]
        ]
    },
    {
        "id": "60fd23e5d4a03a35",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "EventosPQA",
        "func": "// //Adquisicion de los datos de un evento\n// var Uint8 = new Uint8Array(6);\n// var NewestEvent = msg.payload[0];\n// var StartingGroup = msg.payload[1];\n// var Timestamp1 = msg.payload[3];\n// var Timestamp2 = msg.payload[4];\n// var Timestamp3 = msg.payload[5];\n// var Timestamp4 = msg.payload[6];\n// var VSagVSwell = msg.payload[7];\n// var RatedValue = msg.payload[8];\n// var Threshold = msg.payload[9];\n// var HalfCycle = msg.payload[10];\n// //Corrimiento de datos\n// Uint8[0] = Timestamp1;\n// Uint8[1] = Timestamp1 >> 8;\n// Uint8[2] = Timestamp2;\n// Uint8[3] = Timestamp2 >> 8;\n// Uint8[4] = Timestamp3;\n// Uint8[5] = Timestamp3 >> 8;\n// var year = Uint8[1] + 2000;\n\n// //Data del evento consultado - estructura\n// var dataEvento = { \n//     \"NewestEvent\": NewestEvent,\n//     \"StartingGroup\": StartingGroup,\n//     \"Fecha\": year + \"/\" + Uint8[0] + \"/\" + Uint8[3],\n//     \"Hora\": Uint8[2] + \":\" + Uint8[5] + \":\" + Uint8[4],\n//     \"Milisegundos\": Timestamp4,\n//     \"VSagVSwell\": VSagVSwell,\n//     \"RatedValue\": RatedValue,\n//     \"Threshold\": Threshold,\n//     \"HalfCycle\": HalfCycle\n// };\n// context.set(\"dataEvento\",dataEvento,\"memoryOnly\");\n\n// //Consultar los eventos \n// var Escritura = flow.get(\"Escritura\", \"memoryOnly\") || 0;\n// var m = context.get(\"m\", \"memoryOnly\") || 0;\n// context.set(\"NewestEvent\", NewestEvent,\"memoryOnly\");\n// context.set(\"Escritura\", Escritura,\"memoryOnly\");\n// var EventoGuardado = flow.get(\"EventoGuardado\", \"memoryOnly\") || {};\n// var EventoG = flow.get(\"EventoGuardado\", \"memoryOnly\") || [];\n\n// if (Escritura != NewestEvent && Escritura != 1){  \n//     m = 1;\n//     m = m + 1;\n//     Escritura = NewestEvent - m;\n//     if (m > 0 && m <= 10){\n//         // guardar el evento seleccionado\n//         EventoGuardado =  Object.assign(dataEvento);\n//     } \n// } else {\n//     m = 0;\n//     Escritura = NewestEvent + 1;\n// }\n// context.set(\"m\",m,\"memoryOnly\");\n// context.set(\"EventoGuardado\", EventoGuardado, \"memoryOnly\");\n\n// flow.set(\"Escritura\", Escritura, \"memoryOnly\"); //Guarda el numero del evento a consultar \n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c50102d446fec0a3",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "",
        "func": "// var target = { a: 1, b: 2 };\n// var source = { b: 4, c: 5 };\n// var x  = [1,2,3,4]\n// var y = x.push(\"1\");\n\n// var returnedTarget = Object.assign(target, source);\n// context.set(\"var\", returnedTarget)\n// context.set(\"y\", y)\n\n// Array.prototype.push.apply(x,2);\n// context.set(\"x\",x )\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8abdccdc7d1b8710",
        "type": "inject",
        "z": "323bc1f107eef839",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 830,
        "y": 500,
        "wires": [
            [
                "c50102d446fec0a3"
            ]
        ]
    },
    {
        "id": "a020c00651fef5cc",
        "type": "function",
        "z": "323bc1f107eef839",
        "name": "",
        "func": "// //Adquisicion de los datos de un evento\n// var Uint8 = new Uint8Array(6);\n// var NewestEvent = msg.payload[0];\n// var StartingGroup = msg.payload[1];\n// var Timestamp1 = msg.payload[3];\n// var Timestamp2 = msg.payload[4];\n// var Timestamp3 = msg.payload[5];\n// var Timestamp4 = msg.payload[6];\n// var VSagVSwell = msg.payload[7];\n// var RatedValue = msg.payload[8];\n// var Threshold = msg.payload[9];\n// var HalfCycle = msg.payload[10];\n// //Corrimiento de datos\n// Uint8[0] = Timestamp1;\n// Uint8[1] = Timestamp1 >> 8;\n// Uint8[2] = Timestamp2;\n// Uint8[3] = Timestamp2 >> 8;\n// Uint8[4] = Timestamp3;\n// Uint8[5] = Timestamp3 >> 8;\n// var year = Uint8[1] + 2000;\n\n// //Data del evento consultado - estructura\n// var dataEvento = {\n//     \"NewestEvent\": NewestEvent,\n//     \"StartingGroup\": StartingGroup,\n//     \"Fecha\": year + \"/\" + Uint8[0] + \"/\" + Uint8[3],\n//     \"Hora\": Uint8[2] + \":\" + Uint8[5] + \":\" + Uint8[4],\n//     \"Milisegundos\": Timestamp4,\n//     \"VSagVSwell\": VSagVSwell,\n//     \"RatedValue\": RatedValue,\n//     \"Threshold\": Threshold,\n//     \"HalfCycle\": HalfCycle\n// };\n// context.set(\"dataEvento\", dataEvento, \"memoryOnly\");\n// var EventoGuardado = context.get(\"EventoGuardado\", \"memoryOnly\") || {};\n// var Escritura = flow.get(\"Escritura\",\"memoryOnly\");\n// Escritura = Escritura + 1;\n// EventoGuardado = Object.assign(dataEvento);\n// context.set(\"EventoGuardado\", EventoGuardado,\"memoryOnly\");\n// flow.set(\"Escritura\", Escritura, \"memoryOnly\"); //Guarda el numero del evento a consultar \n\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 520,
        "wires": [
            []
        ]
    }
]